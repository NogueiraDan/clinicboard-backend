spring.application.name=user-service
server.port=8081

# Database Connection Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://ep-late-snow-acqzi8ns-pooler.sa-east-1.aws.neon.tech/clinicboard?user=clinicboard_owner&password=npg_vgPcpyk94LeG&sslmode=require}
spring.datasource.username=${DATABASE_USER:clinicboard_owner}
spring.datasource.password=${DATABASE_PASSWORD:npg_vgPcpyk94LeG}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

# CREDENTIALS
api.security.token.secret=${JWT_SECRET:my-secret-key}

# Eureka Client Properties
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.client.should-enforce-registration-at-init=true
eureka.client.registryFetchIntervalSeconds=10
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=20
eureka.client.healthcheck.enabled=true
eureka.client.eureka-server-connect-timeout-seconds=5
eureka.client.eureka-server-read-timeout-seconds=8

# RESILIENCE AND METRICS
management.endpoint.health.show-details=always
management.endpoint.metrics.access=read-only
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.tags.application=${spring.application.name}
management.prometheus.metrics.export.enabled=true

# Feign Client Configuration
spring.cloud.openfeign.client.config.user-service.connect-timeout=5000
spring.cloud.openfeign.client.config.user-service.read-timeout=10000
spring.cloud.openfeign.client.config.user-service.logger-level=basic
feign.client.config.business-service.url=${BUSINESS_SERVICE_URL:http://localhost:8082}

# Resilience4J Configurations
spring.cloud.circuitbreaker.resilience4j.enabled=true
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.configs.default.slow-call-rate-threshold=80
resilience4j.circuitbreaker.configs.default.slow-call-duration-threshold=3s
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=1s
resilience4j.retry.configs.default.exponential-backoff-multiplier=2

# ===== CONFIGURAÇÃO DE TRACING CORRIGIDA =====
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_URL:http://zipkin:9411}/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Logs com Trace ID
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Tracing adicional
spring.sleuth.zipkin.base-url=${ZIPKIN_URL:http://zipkin:9411}
spring.sleuth.sampler.probability=1.0