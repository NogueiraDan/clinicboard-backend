spring.application.name=business-service

server.port=8082

# Database Connection Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=false

# Eureka Client Properties
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.client.should-enforce-registration-at-init=true
eureka.client.registryFetchIntervalSeconds=10
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=20
eureka.client.healthcheck.enabled=true
eureka.client.eureka-server-connect-timeout-seconds=5
eureka.client.eureka-server-read-timeout-seconds=8

# RESILIENCE AND METRICS
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.access=read-only
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.tags.application=${spring.application.name}
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Configuração de Tracing
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

# Feign Client Configuration
feign.client.config.user-service.connectTimeout=5000
feign.client.config.user-service.readTimeout=10000
feign.client.config.user-service.loggerLevel=basic
feign.circuitbreaker.enabled=true

# Circuit Breaker Bussines Service
resilience4j.circuitbreaker.instances.business-service.slidingWindowType=count-based
resilience4j.circuitbreaker.instances.business-service.sliding-window-size=5
resilience4j.circuitbreaker.instances.business-service.register-health-indicator=true
resilience4j.circuitbreaker.instances.business-service.failure-rate-threshold=60
resilience4j.circuitbreaker.instances.business-service.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.business-service.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.business-service.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.business-service.permitted-number-of-calls-in-half-open-state=2

# Retry
resilience4j.retry.instances.business-service.max-attempts=2
resilience4j.retry.instances.business-service.wait-duration=3000

# RabbbitMQ Properties
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# Configurações de Mensageria centralizadas (padrão app.messaging.*)
# Exchange
app.messaging.exchange.events=clinicboard.events

# Routing Keys
app.messaging.routing-key.appointment-scheduled=appointment.scheduled
app.messaging.routing-key.appointment-canceled=appointment.canceled
app.messaging.routing-key.appointment-rescheduled=appointment.rescheduled

# DLQ Configurations
app.messaging.dlq.exchange.events.dlq=clinicboard.events.dlq
app.messaging.dlq.routing-key.events.failed=events.failed

# Notification Service ID
discovery.client.service.id=notification-service
